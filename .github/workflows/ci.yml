name: CI

on:
  push:
    branches:
      - master
      - prerelease
    tags:
      - '**'
  pull_request: {}

jobs:
  test-linux:
    name: test py${{ matrix.os }} on linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ "ubuntu-py36",
                "ubuntu-py37",
                "ubuntu-py38",
                "ubuntu-py39"]
        include:
          - name: "ubuntu-py36"
            python: "3.6"
            os: ubuntu-latest
            tox_env: "py36"
          - name: "ubuntu-py37"
            python: "3.7"
            os: ubuntu-latest
            tox_env: "py37"
          - python: "3.8"
            os: ubuntu-latest
            tox_env: "py38"
          - name: "ubuntu-py39"
            python: "3.9"
            os: ubuntu-latest
            tox_env: "py39"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install tox coverage

    - name: Test with coverage
      run: "tox -e ${{ matrix.tox_env }}"


  deploy:
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && github.repository == 'matutter/water'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [build]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt

    - name: Build
      run: |
        python -m build

    - name: Twine Check
      run: |
        twine check dist/*
        ls -lh dist

    - name: Upload to PyPi
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.access_token }}
